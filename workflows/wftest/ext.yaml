apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: speconnx
  namespace: argo

spec:
  entrypoint: multiroot      
  # podGC:
  #   strategy: OnWorkflowCompletion 
  volumes:
  - name: test-volume
    hostpath:
      path: /root/argo
      type: Directory
  nodeSelector:
    kubernetes.io/hostname: trtis-worker-2

  templates: 

  - name: python-pre
    inputs:
      parameters:
      - name: message
      - name: command
      - name: argv1
      - name: argv2
      - name: argv3
    outputs:
      artifacts:
      - name: preinputs
        path: /code/specular-onnx/test/
        archive:
          none: {}
    container:
      image: python:trtclient08
      command: ["{{inputs.parameters.command}}", "{{inputs.parameters.message}}", "{{inputs.parameters.argv1}}", "{{inputs.parameters.argv2}}",  "{{inputs.parameters.argv3}}"]
      volumeMounts:
      - name: test-volume
        mountPath: /code
      nodeSelector:
        kubernetes.io/hostname: trtis-worker-2
        
  - name: python-post
    inputs:
      parameters:
      - name: message
      - name: command
      - name: argv1
      - name: argv2
      - name: argv3
    outputs:
      artifacts:
      - name: postresult
        path: /code/specular-onnx/output/
        archive:
          none: {}
    container:
      image: python:trtclient08
      command: ["{{inputs.parameters.command}}", "{{inputs.parameters.message}}", "{{inputs.parameters.argv1}}", "{{inputs.parameters.argv2}}",  "{{inputs.parameters.argv3}}"]
      volumeMounts:
      - name: test-volume
        mountPath: /code
      nodeSelector:
        kubernetes.io/hostname: trtis-worker-2

  - name: python
    inputs:
      parameters:
      - name: message
      - name: command
      - name: argv1
      - name: argv2
      - name: argv3
    container:
      image: python:trtclient08
      command: ["{{inputs.parameters.command}}", "{{inputs.parameters.message}}", "{{inputs.parameters.argv1}}", "{{inputs.parameters.argv2}}",  "{{inputs.parameters.argv3}}"]
      volumeMounts:
      - name: test-volume
        mountPath: /code
      nodeSelector:
        kubernetes.io/hostname: trtis-worker-2

  - name: multiroot
    dag:

      tasks:

      - name: preprocess
        template: python-pre
        arguments:
          parameters: [{name: command, value: python}, {name: message, value: "/code/speconnxpre.py"}, {name: argv1, value: "/code/specular-onnx/test/"}, {name: argv2, value: "/code/onnx/preoutput.npy"}, {name: argv3, value: ""}]

      - name: metrics
        template: python
        arguments:
          parameters: [{name: command, value: python}, {name: message, value: "/code/metric.py"}, {name: argv1, value: '183.111.177.131'}, {name: argv2, value: ""}, {name: argv3, value: ""}]
        successCondition: tasks.postprocess.status.phase == Succeeded
        failureCondition: tasks.postprocess.status.phase in (Failed, Error)
        
      - name: inference
        dependencies: [preprocess]
        template: python
        arguments:
          parameters: [{name: command, value: python}, {name: message, value: "/code/speconnxinfer.py"}, {name: argv1, value: '183.111.177.131'}, {name: argv2, value: "/code/specular-onnx/preoutput.npy"}, {name: argv3, value: "/code/specular-onnx/infoutput.npy"}]

      - name: postprocess
        dependencies: [inference]
        template: python-post
        arguments:
          parameters: [{name: command, value: python}, {name: message, value: "/code/speconnxpost.py"}, {name: argv1, value: "/code/specular-onnx/infoutput.npy"}, {name: argv2, value: "/code/specular-onnx/output/"}, {name: argv3, value: ""}]
