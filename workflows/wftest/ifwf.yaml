metadata:
  name: triton
spec:
  entrypoint: multiroot
  volumes:
  - name: test-volume
    hostpath:
      path: /root/argo
      type: Directory

  templates:
    - name: triton
      daemon: true
      volumes:
      - name: test-volume
        hostpath:
          path: /root/argo/model-test
          type: Directory
      inputs:
        parameters:
          - name: store
          - name: config
          - name: log
          - name: apiv
      container:
        name: main
        image: 'nvcr.io/nvidia/tritonserver:20.03.1-py3'
        readinessProbe:
          httpGet:
            path: /v2/health/ready
            port: 8000
          initialDelaySeconds: 7
          # periodSeconds: 60
          successThreshold: 1
          failureThreshold: 3
        command:
        - trtserver
        args:
          - '{{inputs.parameters.store}}'
          - '{{inputs.parameters.config}}'
          - '{{inputs.parameters.log}}'
          - '{{inputs.parameters.apiv}}'
        volumeMounts:
        - name: test-volume
          mountPath: /models
          resources:
        limits:
          nvidia.com/gpu: 1
      nodeSelector:
        kubernetes.io/hostname: trtis-worker-2

    - name: metrics
      inputs:
        parameters:
          - name: message
          - name: endpoint
      volumes:
      - name: test-volume
        hostpath:
          path: /root/argo
          type: Directory
      container:
        name: main
        image: 'python:trtclient08'
        command:
        - python
        args:
        - '{{inputs.parameters.message}}'
        - '{{inputs.parameters.endpoint}}'
        volumeMounts:
        - name: test-volume
          mountPath: /code
        nodeSelector:
          kubernetes.io/hostname: trtis-worker-2
        
    - name: multiroot
      steps:
      - - name: trtserver
          template: triton
          arguments:
            parameters: [{name: store, value: --model-repository=/models}, {name: config, value: --strict-model-config=false}, {name: log, value: --log-verbose=2}, {name: apiv, value: --api-version=2}]

      - - name: trt-metric
          template: metrics
          arguments:
            parameters: [{name: message, value: "/code/metric.py"}, {name: endpoint, value: '{{steps.trtserver.ip}}'}]
